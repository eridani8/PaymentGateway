@page "/UserManagement"
@using PaymentGateway.Shared.DTOs.User
@using PaymentGateway.Web.Dialogs
@attribute [Authorize(Roles = "Admin")]
@inject IAdminService AdminService
@inject ILogger<UserManagement> Logger
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<AuthorizeView Roles="Admin">
    <Authorized>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4" Style="height: calc(100vh - 97px); padding: 0;">
            <MudPaper Class="pa-4" Elevation="12" Style="height: 100%; display: flex; flex-direction: column;">
                <MudToolBar>
                    <MudText Typo="Typo.h6">Список пользователей</MudText>
                    <MudSpacer />
                    <MudButton 
                        Variant="Variant.Filled" 
                        Color="Color.Primary" 
                        StartIcon="@Icons.Material.Filled.Add" 
                        OnClick="OpenCreateDialog">
                        Создать пользователя
                    </MudButton>
                </MudToolBar>
                <MudTable Items="@_users" 
                          Loading="@_isLoading" 
                          Hover="true" 
                          Breakpoint="Breakpoint.Sm"
                          Bordered="true"
                          FixedHeader="true"
                          Height="100%"
                          Width="100%">
                    <HeaderContent>
                        <MudTh>ID</MudTh>
                        <MudTh>Логин</MudTh>
                        <MudTh>Роль</MudTh>
                        <MudTh>Действия</MudTh>
                    </HeaderContent>
                    <RowTemplate Context="user">
                        <MudTd DataLabel="ID">@user.Id</MudTd>
                        <MudTd DataLabel="Логин">@user.Username</MudTd>
                        <MudTd DataLabel="Роли">@string.Join(", ", user.Roles)</MudTd>
                        <MudTd DataLabel="Действия">
                            <MudIconButton 
                                Icon="@Icons.Material.Filled.Delete" 
                                Color="Color.Error" 
                                Size="Size.Small"
                                OnClick="@(() => OpenDeleteDialog(user))" 
                                aria-label="delete" />
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>
            </MudPaper>
        </MudContainer>
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/");
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isLoading = true;
    private List<UserDto> _users = [];

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            _isLoading = true;
            _users = await AdminService.GetUsers();
        }
        catch (Exception e)
        {
            Logger.LogError(e, e.Message);
            Snackbar.Add("Ошибка при загрузке пользователей", Severity.Error);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task OpenCreateDialog()
    {
        var dialog = await DialogService.ShowAsync<CreateUserDialog>("Создание пользователя");
        var result = await dialog.Result;

        if (result is { Canceled: false })
        {
            await LoadUsers();
        }
    }
    
    private async Task OpenDeleteDialog(UserDto user)
    {
        var parameters = new DialogParameters { ["User"] = user };
        var dialog = await DialogService.ShowAsync<DeleteUserDialog>("", parameters);
        var result = await dialog.Result;

        if (result is { Canceled: false })
        {
            await LoadUsers();
        }
    }
}