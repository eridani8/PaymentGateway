@inject IJSRuntime JsRuntime
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Авторизация устройства</MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Class="d-flex flex-column align-center">
            <MudText Typo="Typo.body1" Class="mb-4">
                Отсканируйте QR-код
            </MudText>

            <MudContainer MaxWidth="MaxWidth.Large" Class="d-flex flex-column w-100">
                @if (!string.IsNullOrEmpty(QrCodeImage))
                {
                    <MudImage Src="@QrCodeImage"
                              Alt="QR код для авторизации устройства"
                              Width="300"
                              Height="300"
                              ObjectFit="ObjectFit.Cover"
                              Elevation="25"
                              Class="rounded-lg mx-auto"/>
                    <MudText Typo="Typo.body1" Class="mb-4">
                        Или введите токен вручную:
                        <MudTextField ReadOnly="true"
                                      Value="@Token"
                                      Variant="Variant.Outlined"
                                      Adornment="Adornment.End"
                                      AdornmentIcon="@Icons.Material.Filled.ContentCopy"
                                      OnAdornmentClick="@(() => CopyToClipboard(Token))"
                                      FullWidth="true"
                                      Lines="3"
                                      Class="mt-2"/>
                    </MudText>
                }
                else
                {
                    <MudAlert Severity="Severity.Error">Ошибка генерации QR кода</MudAlert>
                }
            </MudContainer>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@Cancel">Закрыть</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public string QrCodeImage { get; set; } = string.Empty;
    [Parameter] public string Token { get; set; } = string.Empty;

    private async Task CopyToClipboard(string text)
    {
        try
        {
            await JsRuntime.InvokeVoidAsync("copyTextToClipboard", text);
            Snackbar.Add("Токен скопирован в буфер обмена", Severity.Success);
        }
        catch
        {
            Snackbar.Add("Clipboard API недоступен без HTTPS", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();
} 