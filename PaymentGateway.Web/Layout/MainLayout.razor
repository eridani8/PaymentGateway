@inherits LayoutComponentBase
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager Navigation

<MudThemeProvider Theme="_theme" IsDarkMode="_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Color="Color.Primary" Elevation="7">
        <MudText Typo="Typo.h5" Class="ml-3">PaymentGateway</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"/>
        <AuthorizeView>
            <Authorized>
                <MudMenu AnchorOrigin="Origin.BottomCenter">
                    <ActivatorContent>
                        <MudChip T="string" Icon="@Icons.Material.Filled.Person"
                                 Color="Color.Primary">@context.User.Identity?.Name</MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem OnClick="NavigateToSettings" Icon="@Icons.Material.Filled.Settings"
                                     Label="Настройки"/>
                        <MudDivider/>
                        <MudMenuItem OnClick="Logout" Icon="@Icons.Material.Filled.ExitToApp" Label="Выход"/>
                    </ChildContent>
                </MudMenu>
            </Authorized>
            <NotAuthorized>
                <MudButton Variant="Variant.Text" Href="/login">Вход</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <AuthorizeView>
        <Authorized>
            <MudDrawer Variant="DrawerVariant.Responsive"
                       Elevation="2"
                       ClipMode="DrawerClipMode.Always"
                       Open="true">
                <NavMenu/>
            </MudDrawer>
        </Authorized>
    </AuthorizeView>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {

    private bool _isDarkMode = true;
    private MudTheme? _theme;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        _theme = new MudTheme
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private const string Primary = "#663882";
    private const string Secondary = "#e3b178";
    private const string Info = "#A594F9";
    private const string Success = "#86BA90";
    private const string Warning = "#F28123";
    private const string Error = "#B9314F";

    private readonly PaletteLight _lightPalette = new()
    {
        Primary = Primary,
        Secondary = Secondary,
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
        Info = Info,
        Success = Success,
        Warning = Warning,
        Error = Error,
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = Primary,
        Secondary = Secondary,
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = Info,
        Success = Success,
        Warning = Warning,
        Error = Error,
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    private string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    private void NavigateToSettings()
    {
        Navigation.NavigateTo("/settings");
    }

    private async Task Logout()
    {
        await AuthStateProvider.MarkUserAsLoggedOut();
        Navigation.Refresh(true);
    }

}
